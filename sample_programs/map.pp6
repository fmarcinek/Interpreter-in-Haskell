fun map(p : (int -> int) * int list) : int list =
    let f = fst(p) in
    let L = snd(p) in
    match L with
        | [] -> [] : int list
        | x :: xs -> (f (x) :: map (f,xs))


fun sum(L : int list) : int =
    match L with
        | [] -> 0
        | x :: xs -> x + sum xs

in
 let fi = fn(x : int) -> x*x in
 sum(map (fi,[1,2,3,4,5]:int list))
